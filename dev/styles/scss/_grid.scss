@mixin spans($columns, $rows, $column-gap, $row-gap) {
  @for $i from 1 through 6 {
    .span-#{$i} {
      grid-column: auto / span ($i*2);
      &[class*='cce']{
        display: grid;
        grid-template-columns: repeat($i, 1fr);
        grid-template-rows: $rows;
        grid-column-gap: $column-gap;
        grid-row-gap: $row-gap;
        >*{
          grid-column: span $i;
        }
      }
      &.cce-schwarzer-kasten{
        display: block;
        .text-container{
          display: grid;
          grid-template-columns: repeat($i, 1fr);
          grid-template-rows: $rows;
          grid-column-gap: $column-gap;
          grid-row-gap: $row-gap;
        }
      }
    }
  }
}

@mixin starts($columns) {
  @for $i from 1 through 6 {
    .starts-#{$i} {
      grid-column-start: (($i*2)-1);
    }
  }
}

@mixin grid($columns, $rows, $column-gap, $row-gap){
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-template-rows: $rows;
  grid-column-gap: $column-gap;
  grid-row-gap: $row-gap;
  @include spans($columns, $rows, $column-gap, $row-gap);
  @include starts($columns);
}
